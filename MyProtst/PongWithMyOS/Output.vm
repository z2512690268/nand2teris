//class Output  { 
//    static Array charMaps ;  
//    static int CursorRow ; 
//    static int CursorCol ; 
//    static int ScreenBase ; 
//    function void init (  )   { 
//        do Output . initMap (  )  ; 
function Output.init 0
call Output.initMap 0
pop temp 0
//        let CursorCol  =  0 ; 
push constant 0
pop static 2
//        let CursorRow  =  0 ; 
push constant 0
pop static 1
//        let ScreenBase  =  16384 ; 
push constant 16384
pop static 3
//        return ; 
push constant 0
return
//     } 
//    function void initMap (  )   { 
//        var int i ; 
//        let charMaps  =  Array . new ( 127 )  ; 
function Output.initMap 1
push constant 127
call Array.new 1
pop static 0
//        do Output . create ( 0 , 63 , 63 , 63 , 63 , 63 , 63 , 63 , 63 , 63 , 0 , 0 )  ; 
push constant 0
push constant 63
push constant 63
push constant 63
push constant 63
push constant 63
push constant 63
push constant 63
push constant 63
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 32 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;           
push constant 32
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 33 , 12 , 30 , 30 , 30 , 12 , 12 , 0 , 12 , 12 , 0 , 0 )  ;   
push constant 33
push constant 12
push constant 30
push constant 30
push constant 30
push constant 12
push constant 12
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 34 , 54 , 54 , 20 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;        
push constant 34
push constant 54
push constant 54
push constant 20
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 35 , 0 , 18 , 18 , 63 , 18 , 18 , 63 , 18 , 18 , 0 , 0 )  ;   
push constant 35
push constant 0
push constant 18
push constant 18
push constant 63
push constant 18
push constant 18
push constant 63
push constant 18
push constant 18
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 36 , 12 , 30 , 51 , 3 , 30 , 48 , 51 , 30 , 12 , 12 , 0 )  ;  
push constant 36
push constant 12
push constant 30
push constant 51
push constant 3
push constant 30
push constant 48
push constant 51
push constant 30
push constant 12
push constant 12
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 37 , 0 , 0 , 35 , 51 , 24 , 12 , 6 , 51 , 49 , 0 , 0 )  ;     
push constant 37
push constant 0
push constant 0
push constant 35
push constant 51
push constant 24
push constant 12
push constant 6
push constant 51
push constant 49
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 38 , 12 , 30 , 30 , 12 , 54 , 27 , 27 , 27 , 54 , 0 , 0 )  ;  
push constant 38
push constant 12
push constant 30
push constant 30
push constant 12
push constant 54
push constant 27
push constant 27
push constant 27
push constant 54
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 39 , 12 , 12 , 6 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;         
push constant 39
push constant 12
push constant 12
push constant 6
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 40 , 24 , 12 , 6 , 6 , 6 , 6 , 6 , 12 , 24 , 0 , 0 )  ;       
push constant 40
push constant 24
push constant 12
push constant 6
push constant 6
push constant 6
push constant 6
push constant 6
push constant 12
push constant 24
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 41 , 6 , 12 , 24 , 24 , 24 , 24 , 24 , 12 , 6 , 0 , 0 )  ;    
push constant 41
push constant 6
push constant 12
push constant 24
push constant 24
push constant 24
push constant 24
push constant 24
push constant 12
push constant 6
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 42 , 0 , 0 , 0 , 51 , 30 , 63 , 30 , 51 , 0 , 0 , 0 )  ;      
push constant 42
push constant 0
push constant 0
push constant 0
push constant 51
push constant 30
push constant 63
push constant 30
push constant 51
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 43 , 0 , 0 , 0 , 12 , 12 , 63 , 12 , 12 , 0 , 0 , 0 )  ;      
push constant 43
push constant 0
push constant 0
push constant 0
push constant 12
push constant 12
push constant 63
push constant 12
push constant 12
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 44 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 12 , 12 , 6 , 0 )  ;         
push constant 44
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 12
push constant 12
push constant 6
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 45 , 0 , 0 , 0 , 0 , 0 , 63 , 0 , 0 , 0 , 0 , 0 )  ;          
push constant 45
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 63
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 46 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 12 , 12 , 0 , 0 )  ;         
push constant 46
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 47 , 0 , 0 , 32 , 48 , 24 , 12 , 6 , 3 , 1 , 0 , 0 )  ;       
push constant 47
push constant 0
push constant 0
push constant 32
push constant 48
push constant 24
push constant 12
push constant 6
push constant 3
push constant 1
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 48 , 12 , 30 , 51 , 51 , 51 , 51 , 51 , 30 , 12 , 0 , 0 )  ;  
push constant 48
push constant 12
push constant 30
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 49 , 12 , 14 , 15 , 12 , 12 , 12 , 12 , 12 , 63 , 0 , 0 )  ;  
push constant 49
push constant 12
push constant 14
push constant 15
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 50 , 30 , 51 , 48 , 24 , 12 , 6 , 3 , 51 , 63 , 0 , 0 )  ;    
push constant 50
push constant 30
push constant 51
push constant 48
push constant 24
push constant 12
push constant 6
push constant 3
push constant 51
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 51 , 30 , 51 , 48 , 48 , 28 , 48 , 48 , 51 , 30 , 0 , 0 )  ;  
push constant 51
push constant 30
push constant 51
push constant 48
push constant 48
push constant 28
push constant 48
push constant 48
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 52 , 16 , 24 , 28 , 26 , 25 , 63 , 24 , 24 , 60 , 0 , 0 )  ;  
push constant 52
push constant 16
push constant 24
push constant 28
push constant 26
push constant 25
push constant 63
push constant 24
push constant 24
push constant 60
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 53 , 63 , 3 , 3 , 31 , 48 , 48 , 48 , 51 , 30 , 0 , 0 )  ;    
push constant 53
push constant 63
push constant 3
push constant 3
push constant 31
push constant 48
push constant 48
push constant 48
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 54 , 28 , 6 , 3 , 3 , 31 , 51 , 51 , 51 , 30 , 0 , 0 )  ;     
push constant 54
push constant 28
push constant 6
push constant 3
push constant 3
push constant 31
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 55 , 63 , 49 , 48 , 48 , 24 , 12 , 12 , 12 , 12 , 0 , 0 )  ;  
push constant 55
push constant 63
push constant 49
push constant 48
push constant 48
push constant 24
push constant 12
push constant 12
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 56 , 30 , 51 , 51 , 51 , 30 , 51 , 51 , 51 , 30 , 0 , 0 )  ;  
push constant 56
push constant 30
push constant 51
push constant 51
push constant 51
push constant 30
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 57 , 30 , 51 , 51 , 51 , 62 , 48 , 48 , 24 , 14 , 0 , 0 )  ;  
push constant 57
push constant 30
push constant 51
push constant 51
push constant 51
push constant 62
push constant 48
push constant 48
push constant 24
push constant 14
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 58 , 0 , 0 , 12 , 12 , 0 , 0 , 12 , 12 , 0 , 0 , 0 )  ;       
push constant 58
push constant 0
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 59 , 0 , 0 , 12 , 12 , 0 , 0 , 12 , 12 , 6 , 0 , 0 )  ;       
push constant 59
push constant 0
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
push constant 12
push constant 12
push constant 6
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 60 , 0 , 0 , 24 , 12 , 6 , 3 , 6 , 12 , 24 , 0 , 0 )  ;       
push constant 60
push constant 0
push constant 0
push constant 24
push constant 12
push constant 6
push constant 3
push constant 6
push constant 12
push constant 24
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 61 , 0 , 0 , 0 , 63 , 0 , 0 , 63 , 0 , 0 , 0 , 0 )  ;         
push constant 61
push constant 0
push constant 0
push constant 0
push constant 63
push constant 0
push constant 0
push constant 63
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 62 , 0 , 0 , 3 , 6 , 12 , 24 , 12 , 6 , 3 , 0 , 0 )  ;        
push constant 62
push constant 0
push constant 0
push constant 3
push constant 6
push constant 12
push constant 24
push constant 12
push constant 6
push constant 3
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 64 , 30 , 51 , 51 , 59 , 59 , 59 , 27 , 3 , 30 , 0 , 0 )  ;   
push constant 64
push constant 30
push constant 51
push constant 51
push constant 59
push constant 59
push constant 59
push constant 27
push constant 3
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 63 , 30 , 51 , 51 , 24 , 12 , 12 , 0 , 12 , 12 , 0 , 0 )  ;   
push constant 63
push constant 30
push constant 51
push constant 51
push constant 24
push constant 12
push constant 12
push constant 0
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 65 , 12 , 30 , 51 , 51 , 63 , 51 , 51 , 51 , 51 , 0 , 0 )  ;  
push constant 65
push constant 12
push constant 30
push constant 51
push constant 51
push constant 63
push constant 51
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 66 , 31 , 51 , 51 , 51 , 31 , 51 , 51 , 51 , 31 , 0 , 0 )  ;  
push constant 66
push constant 31
push constant 51
push constant 51
push constant 51
push constant 31
push constant 51
push constant 51
push constant 51
push constant 31
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 67 , 28 , 54 , 35 , 3 , 3 , 3 , 35 , 54 , 28 , 0 , 0 )  ;     
push constant 67
push constant 28
push constant 54
push constant 35
push constant 3
push constant 3
push constant 3
push constant 35
push constant 54
push constant 28
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 68 , 15 , 27 , 51 , 51 , 51 , 51 , 51 , 27 , 15 , 0 , 0 )  ;  
push constant 68
push constant 15
push constant 27
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 27
push constant 15
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 69 , 63 , 51 , 35 , 11 , 15 , 11 , 35 , 51 , 63 , 0 , 0 )  ;  
push constant 69
push constant 63
push constant 51
push constant 35
push constant 11
push constant 15
push constant 11
push constant 35
push constant 51
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 70 , 63 , 51 , 35 , 11 , 15 , 11 , 3 , 3 , 3 , 0 , 0 )  ;     
push constant 70
push constant 63
push constant 51
push constant 35
push constant 11
push constant 15
push constant 11
push constant 3
push constant 3
push constant 3
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 71 , 28 , 54 , 35 , 3 , 59 , 51 , 51 , 54 , 44 , 0 , 0 )  ;   
push constant 71
push constant 28
push constant 54
push constant 35
push constant 3
push constant 59
push constant 51
push constant 51
push constant 54
push constant 44
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 72 , 51 , 51 , 51 , 51 , 63 , 51 , 51 , 51 , 51 , 0 , 0 )  ;  
push constant 72
push constant 51
push constant 51
push constant 51
push constant 51
push constant 63
push constant 51
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 73 , 30 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 30 , 0 , 0 )  ;  
push constant 73
push constant 30
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 74 , 60 , 24 , 24 , 24 , 24 , 24 , 27 , 27 , 14 , 0 , 0 )  ;  
push constant 74
push constant 60
push constant 24
push constant 24
push constant 24
push constant 24
push constant 24
push constant 27
push constant 27
push constant 14
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 75 , 51 , 51 , 51 , 27 , 15 , 27 , 51 , 51 , 51 , 0 , 0 )  ;  
push constant 75
push constant 51
push constant 51
push constant 51
push constant 27
push constant 15
push constant 27
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 76 , 3 , 3 , 3 , 3 , 3 , 3 , 35 , 51 , 63 , 0 , 0 )  ;        
push constant 76
push constant 3
push constant 3
push constant 3
push constant 3
push constant 3
push constant 3
push constant 35
push constant 51
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 77 , 33 , 51 , 63 , 63 , 51 , 51 , 51 , 51 , 51 , 0 , 0 )  ;  
push constant 77
push constant 33
push constant 51
push constant 63
push constant 63
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 78 , 51 , 51 , 55 , 55 , 63 , 59 , 59 , 51 , 51 , 0 , 0 )  ;  
push constant 78
push constant 51
push constant 51
push constant 55
push constant 55
push constant 63
push constant 59
push constant 59
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 79 , 30 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 30 , 0 , 0 )  ;  
push constant 79
push constant 30
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 80 , 31 , 51 , 51 , 51 , 31 , 3 , 3 , 3 , 3 , 0 , 0 )  ;      
push constant 80
push constant 31
push constant 51
push constant 51
push constant 51
push constant 31
push constant 3
push constant 3
push constant 3
push constant 3
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 81 , 30 , 51 , 51 , 51 , 51 , 51 , 63 , 59 , 30 , 48 , 0 )  ; 
push constant 81
push constant 30
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 63
push constant 59
push constant 30
push constant 48
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 82 , 31 , 51 , 51 , 51 , 31 , 27 , 51 , 51 , 51 , 0 , 0 )  ;  
push constant 82
push constant 31
push constant 51
push constant 51
push constant 51
push constant 31
push constant 27
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 83 , 30 , 51 , 51 , 6 , 28 , 48 , 51 , 51 , 30 , 0 , 0 )  ;   
push constant 83
push constant 30
push constant 51
push constant 51
push constant 6
push constant 28
push constant 48
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 84 , 63 , 63 , 45 , 12 , 12 , 12 , 12 , 12 , 30 , 0 , 0 )  ;  
push constant 84
push constant 63
push constant 63
push constant 45
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 85 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 30 , 0 , 0 )  ;  
push constant 85
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 86 , 51 , 51 , 51 , 51 , 51 , 30 , 30 , 12 , 12 , 0 , 0 )  ;  
push constant 86
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 30
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 87 , 51 , 51 , 51 , 51 , 51 , 63 , 63 , 63 , 18 , 0 , 0 )  ;  
push constant 87
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 63
push constant 63
push constant 63
push constant 18
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 88 , 51 , 51 , 30 , 30 , 12 , 30 , 30 , 51 , 51 , 0 , 0 )  ;  
push constant 88
push constant 51
push constant 51
push constant 30
push constant 30
push constant 12
push constant 30
push constant 30
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 89 , 51 , 51 , 51 , 51 , 30 , 12 , 12 , 12 , 30 , 0 , 0 )  ;  
push constant 89
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 12
push constant 12
push constant 12
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 90 , 63 , 51 , 49 , 24 , 12 , 6 , 35 , 51 , 63 , 0 , 0 )  ;   
push constant 90
push constant 63
push constant 51
push constant 49
push constant 24
push constant 12
push constant 6
push constant 35
push constant 51
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 91 , 30 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 30 , 0 , 0 )  ;           
push constant 91
push constant 30
push constant 6
push constant 6
push constant 6
push constant 6
push constant 6
push constant 6
push constant 6
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 92 , 0 , 0 , 1 , 3 , 6 , 12 , 24 , 48 , 32 , 0 , 0 )  ;         
push constant 92
push constant 0
push constant 0
push constant 1
push constant 3
push constant 6
push constant 12
push constant 24
push constant 48
push constant 32
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 93 , 30 , 24 , 24 , 24 , 24 , 24 , 24 , 24 , 30 , 0 , 0 )  ;    
push constant 93
push constant 30
push constant 24
push constant 24
push constant 24
push constant 24
push constant 24
push constant 24
push constant 24
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 94 , 8 , 28 , 54 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;           
push constant 94
push constant 8
push constant 28
push constant 54
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 95 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 63 , 0 )  ;            
push constant 95
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 63
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 96 , 6 , 12 , 24 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;           
push constant 96
push constant 6
push constant 12
push constant 24
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 97 , 0 , 0 , 0 , 14 , 24 , 30 , 27 , 27 , 54 , 0 , 0 )  ;       
push constant 97
push constant 0
push constant 0
push constant 0
push constant 14
push constant 24
push constant 30
push constant 27
push constant 27
push constant 54
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 98 , 3 , 3 , 3 , 15 , 27 , 51 , 51 , 51 , 30 , 0 , 0 )  ;       
push constant 98
push constant 3
push constant 3
push constant 3
push constant 15
push constant 27
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 99 , 0 , 0 , 0 , 30 , 51 , 3 , 3 , 51 , 30 , 0 , 0 )  ;         
push constant 99
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 3
push constant 3
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 100 , 48 , 48 , 48 , 60 , 54 , 51 , 51 , 51 , 30 , 0 , 0 )  ;   
push constant 100
push constant 48
push constant 48
push constant 48
push constant 60
push constant 54
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 101 , 0 , 0 , 0 , 30 , 51 , 63 , 3 , 51 , 30 , 0 , 0 )  ;       
push constant 101
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 63
push constant 3
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 102 , 28 , 54 , 38 , 6 , 15 , 6 , 6 , 6 , 15 , 0 , 0 )  ;       
push constant 102
push constant 28
push constant 54
push constant 38
push constant 6
push constant 15
push constant 6
push constant 6
push constant 6
push constant 15
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 103 , 0 , 0 , 30 , 51 , 51 , 51 , 62 , 48 , 51 , 30 , 0 )  ;    
push constant 103
push constant 0
push constant 0
push constant 30
push constant 51
push constant 51
push constant 51
push constant 62
push constant 48
push constant 51
push constant 30
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 104 , 3 , 3 , 3 , 27 , 55 , 51 , 51 , 51 , 51 , 0 , 0 )  ;      
push constant 104
push constant 3
push constant 3
push constant 3
push constant 27
push constant 55
push constant 51
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 105 , 12 , 12 , 0 , 14 , 12 , 12 , 12 , 12 , 30 , 0 , 0 )  ;    
push constant 105
push constant 12
push constant 12
push constant 0
push constant 14
push constant 12
push constant 12
push constant 12
push constant 12
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 106 , 48 , 48 , 0 , 56 , 48 , 48 , 48 , 48 , 51 , 30 , 0 )  ;   
push constant 106
push constant 48
push constant 48
push constant 0
push constant 56
push constant 48
push constant 48
push constant 48
push constant 48
push constant 51
push constant 30
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 107 , 3 , 3 , 3 , 51 , 27 , 15 , 15 , 27 , 51 , 0 , 0 )  ;      
push constant 107
push constant 3
push constant 3
push constant 3
push constant 51
push constant 27
push constant 15
push constant 15
push constant 27
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 108 , 14 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 30 , 0 , 0 )  ;   
push constant 108
push constant 14
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 109 , 0 , 0 , 0 , 29 , 63 , 43 , 43 , 43 , 43 , 0 , 0 )  ;      
push constant 109
push constant 0
push constant 0
push constant 0
push constant 29
push constant 63
push constant 43
push constant 43
push constant 43
push constant 43
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 110 , 0 , 0 , 0 , 29 , 51 , 51 , 51 , 51 , 51 , 0 , 0 )  ;      
push constant 110
push constant 0
push constant 0
push constant 0
push constant 29
push constant 51
push constant 51
push constant 51
push constant 51
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 111 , 0 , 0 , 0 , 30 , 51 , 51 , 51 , 51 , 30 , 0 , 0 )  ;      
push constant 111
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 112 , 0 , 0 , 0 , 30 , 51 , 51 , 51 , 31 , 3 , 3 , 0 )  ;       
push constant 112
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 51
push constant 51
push constant 31
push constant 3
push constant 3
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 113 , 0 , 0 , 0 , 30 , 51 , 51 , 51 , 62 , 48 , 48 , 0 )  ;     
push constant 113
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 51
push constant 51
push constant 62
push constant 48
push constant 48
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 114 , 0 , 0 , 0 , 29 , 55 , 51 , 3 , 3 , 7 , 0 , 0 )  ;         
push constant 114
push constant 0
push constant 0
push constant 0
push constant 29
push constant 55
push constant 51
push constant 3
push constant 3
push constant 7
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 115 , 0 , 0 , 0 , 30 , 51 , 6 , 24 , 51 , 30 , 0 , 0 )  ;       
push constant 115
push constant 0
push constant 0
push constant 0
push constant 30
push constant 51
push constant 6
push constant 24
push constant 51
push constant 30
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 116 , 4 , 6 , 6 , 15 , 6 , 6 , 6 , 54 , 28 , 0 , 0 )  ;         
push constant 116
push constant 4
push constant 6
push constant 6
push constant 15
push constant 6
push constant 6
push constant 6
push constant 54
push constant 28
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 117 , 0 , 0 , 0 , 27 , 27 , 27 , 27 , 27 , 54 , 0 , 0 )  ;      
push constant 117
push constant 0
push constant 0
push constant 0
push constant 27
push constant 27
push constant 27
push constant 27
push constant 27
push constant 54
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 118 , 0 , 0 , 0 , 51 , 51 , 51 , 51 , 30 , 12 , 0 , 0 )  ;      
push constant 118
push constant 0
push constant 0
push constant 0
push constant 51
push constant 51
push constant 51
push constant 51
push constant 30
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 119 , 0 , 0 , 0 , 51 , 51 , 51 , 63 , 63 , 18 , 0 , 0 )  ;      
push constant 119
push constant 0
push constant 0
push constant 0
push constant 51
push constant 51
push constant 51
push constant 63
push constant 63
push constant 18
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 120 , 0 , 0 , 0 , 51 , 30 , 12 , 12 , 30 , 51 , 0 , 0 )  ;      
push constant 120
push constant 0
push constant 0
push constant 0
push constant 51
push constant 30
push constant 12
push constant 12
push constant 30
push constant 51
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 121 , 0 , 0 , 0 , 51 , 51 , 51 , 62 , 48 , 24 , 15 , 0 )  ;     
push constant 121
push constant 0
push constant 0
push constant 0
push constant 51
push constant 51
push constant 51
push constant 62
push constant 48
push constant 24
push constant 15
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 122 , 0 , 0 , 0 , 63 , 27 , 12 , 6 , 51 , 63 , 0 , 0 )  ;       
push constant 122
push constant 0
push constant 0
push constant 0
push constant 63
push constant 27
push constant 12
push constant 6
push constant 51
push constant 63
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 123 , 56 , 12 , 12 , 12 , 7 , 12 , 12 , 12 , 56 , 0 , 0 )  ;    
push constant 123
push constant 56
push constant 12
push constant 12
push constant 12
push constant 7
push constant 12
push constant 12
push constant 12
push constant 56
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 124 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 0 , 0 )  ;   
push constant 124
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 12
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 125 , 7 , 12 , 12 , 12 , 56 , 12 , 12 , 12 , 7 , 0 , 0 )  ;     
push constant 125
push constant 7
push constant 12
push constant 12
push constant 12
push constant 56
push constant 12
push constant 12
push constant 12
push constant 7
push constant 0
push constant 0
call Output.create 12
pop temp 0
//        do Output . create ( 126 , 38 , 45 , 25 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 )  ;         
push constant 126
push constant 38
push constant 45
push constant 25
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
call Output.create 12
pop temp 0
//	   return ; 
push constant 0
return
//     } 
//    function void create ( int index ,  int a ,  int b ,  int c ,  int d ,  int e , 
//		         int f ,  int g ,  int h ,  int i ,  int j ,  int k )   { 
//	var Array map ; 
//	let map  =  Array . new ( 11 )  ; 
function Output.create 1
push constant 11
call Array.new 1
pop local 0
//        let charMaps [ index ]   =  map ; 
push static 0
push argument 0
add
pop temp 1
push local 0
push temp 1
pop pointer 1
pop that 0
//        let map [ 0 ]   =  a ; 
push local 0
push constant 0
add
pop temp 1
push argument 1
push temp 1
pop pointer 1
pop that 0
//        let map [ 1 ]   =  b ; 
push local 0
push constant 1
add
pop temp 1
push argument 2
push temp 1
pop pointer 1
pop that 0
//        let map [ 2 ]   =  c ; 
push local 0
push constant 2
add
pop temp 1
push argument 3
push temp 1
pop pointer 1
pop that 0
//        let map [ 3 ]   =  d ; 
push local 0
push constant 3
add
pop temp 1
push argument 4
push temp 1
pop pointer 1
pop that 0
//        let map [ 4 ]   =  e ; 
push local 0
push constant 4
add
pop temp 1
push argument 5
push temp 1
pop pointer 1
pop that 0
//        let map [ 5 ]   =  f ; 
push local 0
push constant 5
add
pop temp 1
push argument 6
push temp 1
pop pointer 1
pop that 0
//        let map [ 6 ]   =  g ; 
push local 0
push constant 6
add
pop temp 1
push argument 7
push temp 1
pop pointer 1
pop that 0
//        let map [ 7 ]   =  h ; 
push local 0
push constant 7
add
pop temp 1
push argument 8
push temp 1
pop pointer 1
pop that 0
//        let map [ 8 ]   =  i ; 
push local 0
push constant 8
add
pop temp 1
push argument 9
push temp 1
pop pointer 1
pop that 0
//        let map [ 9 ]   =  j ; 
push local 0
push constant 9
add
pop temp 1
push argument 10
push temp 1
pop pointer 1
pop that 0
//        let map [ 10 ]   =  k ; 
push local 0
push constant 10
add
pop temp 1
push argument 11
push temp 1
pop pointer 1
pop that 0
//        return ; 
push constant 0
return
//     } 
//    function Array getMap ( char c )   { 
//        if  (  ( c  <  32 )   |   ( c  >  126 )  )   { 
function Output.getMap 0
push argument 0
push constant 32
lt
push argument 0
push constant 126
gt
or
//            let c  =  0 ; 
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop argument 0
//         } 
//        return charMaps [ c ]  ; 
label IF_FALSE0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
//     } 
//    function void moveCursor ( int i ,  int j )   { 
//        var int ScreenPos ; 
//        let CursorRow  =  i ; 
function Output.moveCursor 1
push argument 0
pop static 1
//        let CursorCol  =  j ; 
push argument 1
pop static 2
//        let i  =  0 ; 
push constant 0
pop argument 0
//        while ( i  <  11 )  { 
label WHILE_EXP0
push argument 0
push constant 11
lt
not
//            let ScreenPos  =   ( CursorRow  *  11  +  i )   *  32  +   ( CursorCol  /  2 )  ; 
if-goto WHILE_END0
push static 1
push constant 11
call Math.multiply 2
push argument 0
add
push constant 32
call Math.multiply 2
push static 2
push constant 2
call Math.divide 2
add
pop local 0
//             if (  (  ( CursorCol  /  2 )   *  2 )   =  CursorCol )  { 
push static 2
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
push static 2
eq
//                let ScreenBase [ ScreenPos ]   =  ScreenBase [ ScreenPos ]   &   (  ~ 255 )  ; 
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 3
push local 0
add
pop temp 1
push static 3
push local 0
add
pop pointer 1
push that 0
push constant 255
not
and
push temp 1
pop pointer 1
pop that 0
//             } 
//            else { 
goto IF_END1
label IF_FALSE1
//                let ScreenBase [ ScreenPos ]   =  ScreenBase [ ScreenPos ]   &  255 ; 
push static 3
push local 0
add
pop temp 1
push static 3
push local 0
add
pop pointer 1
push that 0
push constant 255
and
push temp 1
pop pointer 1
pop that 0
//             } 
label IF_END1
//            let i  =  i  +  1 ; 
push argument 0
push constant 1
add
pop argument 0
//         } 
goto WHILE_EXP0
label WHILE_END0
//        return ; 
push constant 0
return
//     } 
//    function void printChar ( char c )   { 
//        var int i ; 
//        var int CharArray ; 
//        var int ScreenPos ; 
//        if ( c  =  String . newLine (  )  )  { 
function Output.printChar 3
push argument 0
call String.newLine 0
eq
//            do Output . println (  )  ; 
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
call Output.println 0
pop temp 0
//            return ; 
push constant 0
return
//         } 
//        if ( c  =  String . backSpace (  )  )  { 
label IF_FALSE2
push argument 0
call String.backSpace 0
eq
//            do Output . backSpace (  )  ; 
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
call Output.backSpace 0
pop temp 0
//            return ; 
push constant 0
return
//         } 
//        let i  =  0 ; 
label IF_FALSE3
push constant 0
pop local 0
//        let CharArray  =  Output . getMap ( c )  ; 
push argument 0
call Output.getMap 1
pop local 1
//        while ( i  <  11 )  { 
label WHILE_EXP1
push local 0
push constant 11
lt
not
//            let ScreenPos  =   ( CursorRow  *  11  +  i )   *  32  +   ( CursorCol  /  2 )  ; 
if-goto WHILE_END1
push static 1
push constant 11
call Math.multiply 2
push local 0
add
push constant 32
call Math.multiply 2
push static 2
push constant 2
call Math.divide 2
add
pop local 2
//            if (  (  ( CursorCol  /  2 )   *  2 )   =  CursorCol )  { 
push static 2
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
push static 2
eq
//                let ScreenBase [ ScreenPos ]   =  ScreenBase [ ScreenPos ]   +  CharArray [ i ]  ; 
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push static 3
push local 2
add
pop temp 1
push static 3
push local 2
add
pop pointer 1
push that 0
push local 1
push local 0
add
pop pointer 1
push that 0
add
push temp 1
pop pointer 1
pop that 0
//             } 
//            else { 
goto IF_END4
label IF_FALSE4
//                let ScreenBase [ ScreenPos ]   =  ScreenBase [ ScreenPos ]   +   ( CharArray [ i ]   *  256 )  ; 
push static 3
push local 2
add
pop temp 1
push static 3
push local 2
add
pop pointer 1
push that 0
push local 1
push local 0
add
pop pointer 1
push that 0
push constant 256
call Math.multiply 2
add
push temp 1
pop pointer 1
pop that 0
//             } 
label IF_END4
//            let i  =  i  +  1 ;             
push local 0
push constant 1
add
pop local 0
//         } 
goto WHILE_EXP1
label WHILE_END1
//        let CursorCol  =  CursorCol  +  1 ; 
push static 2
push constant 1
add
pop static 2
//        if ( CursorCol  =  64 )  { 
push static 2
push constant 64
eq
//            let CursorRow  =  CursorRow  +  1 ; 
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push static 1
push constant 1
add
pop static 1
//            let CursorCol  =  0 ; 
push constant 0
pop static 2
//         } 
//        if ( CursorRow  =  23 )  { 
label IF_FALSE5
push static 1
push constant 23
eq
//            let CursorRow  =  0 ; 
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
pop static 1
//         } 
//        return ; 
label IF_FALSE6
push constant 0
return
//     } 
//    function void printString ( String s )   { 
//        var int i ; 
//        var int Length ; 
//        let Length  =  s . length (  )  ; 
function Output.printString 2
push argument 0
call String.length 1
pop local 1
//        let i  =  0 ; 
push constant 0
pop local 0
//        while ( i  <  Length )  { 
label WHILE_EXP2
push local 0
push local 1
lt
not
//            do Output . printChar ( s . charAt ( i )  )  ; 
if-goto WHILE_END2
push argument 0
push local 0
call String.charAt 2
call Output.printChar 1
pop temp 0
//            let i  =  i  +  1 ; 
push local 0
push constant 1
add
pop local 0
//         } 
goto WHILE_EXP2
label WHILE_END2
//        return ; 
push constant 0
return
//     } 
//    function void printInt ( int i )   { 
//        var String str ; 
//        let str  =  String . new ( 6 )  ; 
function Output.printInt 1
push constant 6
call String.new 1
pop local 0
//        do str . setInt ( i )  ; 
push local 0
push argument 0
call String.setInt 2
pop temp 0
//        do Output . printString ( str )  ; 
push local 0
call Output.printString 1
pop temp 0
//        do str . dispose (  )  ; 
push local 0
call String.dispose 1
pop temp 0
//        return ; 
push constant 0
return
//     } 
//    function void println (  )   { 
//        let CursorRow  =  CursorRow  +  1 ; 
function Output.println 0
push static 1
push constant 1
add
pop static 1
//        let CursorCol  =  0 ; 
push constant 0
pop static 2
//        if ( CursorRow  =  23 )  { 
push static 1
push constant 23
eq
//            let CursorRow  =  0 ; 
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
pop static 1
//         } 
//        do Output . moveCursor ( CursorRow ,  CursorCol )  ; 
label IF_FALSE7
push static 1
push static 2
call Output.moveCursor 2
pop temp 0
//        return ; 
push constant 0
return
//     } 
//    function void backSpace (  )   { 
//        let CursorCol  =  CursorCol  -  1 ; 
function Output.backSpace 0
push static 2
push constant 1
sub
pop static 2
//        if ( CursorCol  <  0 )  { 
push static 2
push constant 0
lt
//            let CursorRow  =  CursorRow  -  1 ; 
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push static 1
push constant 1
sub
pop static 1
//            let CursorCol  =  63 ; 
push constant 63
pop static 2
//         } 
//        if ( CursorRow  <  0 )  { 
label IF_FALSE8
push static 1
push constant 0
lt
//            let CursorRow  =  22 ; 
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 22
pop static 1
//         } 
//        do Output . moveCursor ( CursorRow ,  CursorCol )  ; 
label IF_FALSE9
push static 1
push static 2
call Output.moveCursor 2
pop temp 0
//        return ; 
push constant 0
return
//     } 
// } 
