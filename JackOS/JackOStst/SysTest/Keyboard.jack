// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static String buf;
    /** Initializes the keyboard. */
    function void init() {
        let buf = String.new(64);
        return ;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char Key;
        do Output.printChar(0);
        while(Key = 0){
            let Key = Memory.peek(24576);
        }
        do Output.backSpace();
        do Output.printChar(Key);
        return Key;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var char Key;
        do buf.dispose();
        let buf = String.new(64);
        do Output.printString(message);
        let Key = Keyboard.readChar();
        do Sys.wait(200);
        while(~(Key = String.newLine())){
            if(Key = String.backSpace()){
                do buf.eraseLastChar();
            }
            else{
              do buf.appendChar(Key);
            }
            let Key = Keyboard.readChar();
            do Sys.wait(200);
        }
        return buf;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var int sum;
        var boolean flag;
        var int ch;
        do Keyboard.readLine(message);
        return buf.intValue();
    }
}
